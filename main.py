import numpy as np
import random

                                    #  Завдання 1 
# Створення одновимірного масиву
vector = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]

# Виведення значень масиву
print(vector)
                                   
                                    #  Завдання 2
# Створення двовимірного масиву (матриці) розміром 3x3 і заповнення її нулями
matrix = [[0, 0, 0], 
          [0, 0, 0],
          [0, 0, 0]]

# Виведення значень матриці
print(matrix)

                                    #  Завдання 3  


# Створення двовимірного масиву (матриці) розміром 5x5 і заповнення його випадковими цілими числами від 1 до 10

matrixs = []
for _ in  range(5):
    matrix = []
    for _ in  range(5):
        i = random.randint(1, 10)
        matrix.append(i)
    #print(matrix)    
    matrixs.append(matrix)

#matrixs = [[random.randint(1, 10) for _ in range(5)] for _ in range(5)] # запис попереднього коду одни рядком.

# Виведення значень матриці
for row in matrixs:
     print(row)  

                                #  Завдання 4

# Створення  масив розміром 4x4, заповнення його випадковими дійсними числами в діапазоні від 0 до 1 

matrixs = []
for _ in  range(4):
    matrix = []
    for _ in  range(4):
        i = random.randint(0, 1)
        matrix.append(i)
    #print(matrix)    
    matrixs.append(matrix)

#matrixs = [[random.randint(0, 1) for _ in range(4)] for _ in range(4)] # запис попереднього коду одни рядком.

# Виведення значень матриці
for row in matrixs:
     print(row)  

                                #  Завдання 5

# Створіть два одновимірних масиви розміром 5, заповніть їх випадковими цілими числами в діапазоні від 1 до 10 
# та виконайте на них поелементні операції додавання, віднімання та множення.

a = [] # Пустий масив а
for _ in  range(5): # цикл в якому стврюємо a* масив(спикок) з 5 випадкових елементів в діапазоні від 0 до 10 
        i = random.randint(0, 10) # Метод *random.randint(*початкове_значення, *кінцеве_значення) бібліотеки *random
                                  #  генерує випадкове число з вказаного діапазону  і повертає його  
        a.append(i) # Добавляємо згенероване число до масиву(списку)

b = [] # Пустий масив а
for _ in  range(5): # цикл в якому стврюємо b* масив(спикок) з 5 випадкових елементів в діапазоні від 0 до 10 
        i = random.randint(0, 10)
        b.append(i)

с = [] # Пустий масив в який будемо записувати результати операції додавання, віднімання та множення наших масивів a* і b*

                        # Поелементне додавання масивів a* і b* 

c = [x + y for x, y in zip(a, b)]
print("Додавання:", c)

                        # Поелементне віднімання масивів a* і b* 
c = []
c = [x - y for x, y in zip(a, b)]
print("Віднімання:", c)

                        # Поелементне множення масивів a* і b*
c = []
c = [x * y for x, y in zip(a, b)]
print("Множення:", c)

                                #  Завдання 6

# Створіть дві матриці розміром 2x2 та 2x3, заповніть їх випадковими цілими числами в діапазоні від 1 до 10 та перемножте їх між собою.

a = [] # Пустий масив а
for _ in  range(7): # цикл в якому стврюємо a* масив(спикок) з 7 випадкових елементів в діапазоні від 0 до 10 
        i = random.randint(0, 10) # Метод *random.randint(*початкове_значення, *кінцеве_значення) бібліотеки *random
                                  #  генерує випадкове число з вказаного діапазону  і повертає його  
        a.append(i) # Добавляємо згенероване число до масиву(списку)

b = [] # Пустий масив а
for _ in  range(7): # цикл в якому стврюємо b* масив(спикок) з 7 випадкових елементів в діапазоні від 0 до 10 
        i = random.randint(0, 10)
        b.append(i)

# scalar_dobutok = [] # Пустий масив в який будемо записувати результати операції додавання, віднімання та множення наших масивів a* і b*

scalar_dobutok = sum(x * y for x, y in zip(a, b)) # Скалярний добуток двох векторів - це сума добутків відповідних елементів цих векторі
                                                  # код реалізує знаходження скалярного добутку двох одновекторних масивів

print("Скалярний добуток:", scalar_dobutok )
